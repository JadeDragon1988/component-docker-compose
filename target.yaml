version: "3.4"
services:
  #base-component

  mysql8:
    hostname: mysql_8
    container_name: mysql_8
    image: mysql:8.0.32
    restart: always # 设置容器自启模式
    expose:
      - "3306"
    ports:
      - "5306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
    volumes:
      - ../config/mysql8/init_script/:/docker-entrypoint-initdb.d/
      - ../config/mysql8/config/:/etc/mysql/mysql.conf.d/
    command: mysqld --default-time-zone=''+08:00''

  rabbitmq:
    hostname: rabbitmq
    container_name: rabbitmq
    image: rabbitmq:3.9.3-management
    restart: always
    ports:
      - '5672:5672'
      - '15671:15671'
      - '15672:15672'
    volumes:
      - ./config/rabbitmq/definitions.json:/etc/rabbitmq/definitions.json:ro
      - ./config/rabbitmq/rabbitmq.config:/etc/rabbitmq/rabbitmq.config:ro

  redis:
    hostname: redis
    container_name: redis
    image: redis:7.0.8
    restart: always
    ports:
      - "6379:6379"

  minio:
    hostname: minio
    container_name: minio
    image: minio/minio:RELEASE.2021-06-17T00-10-46Z
    restart: always
    ports:
      - "9090:9000"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    volumes:
      - /Users/jade/Documents/javaSoftware/dockerdata/minio/data:/data
      - /Users/jade/Documents/javaSoftware/dockerdata/minio/config:/etc/minio
    command: server /data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3


volumes:
  data: null
  mysql: null
  rabbitmq: null
  component: null
